import requests
from bs4 import BeautifulSoup

class Recipe:
    def init(self, title, url):
        self.title = title
        self.url = url

    def str(self):
        return f"{self.title} - {self.url}"

class Category:
    def init(self, name, url):
        self.name = name
        self.url = url

    def get_recipes(self):
        recipes = []
        current_url = self.url

        while current_url:
            response = requests.get(current_url)
            if response.status_code != 200:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É. –ö–æ–¥ —Å—Ç–∞—Ç—É—Å–∞: {response.status_code}")
                break

            soup = BeautifulSoup(response.content, "html.parser")
            recipe_cards = soup.find_all("h2", class_="entry-title")

            for card in recipe_cards:
                title_link = card.find("a")
                if title_link:
                    recipe = Recipe(title_link.text.strip(), title_link["href"])
                    recipes.append(recipe)

            # –ò—â–µ–º —Å—Å—ã–ª–∫—É "Older Entries"
            next_page_link = soup.find("a", string="¬´ Older Entries")
            if next_page_link and "href" in next_page_link.attrs:
                current_url = next_page_link["href"]
            else:
                break  # –ï—Å–ª–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –Ω–µ—Ç, –≤—ã—Ö–æ–¥–∏–º

        return recipes

def main():
    categories = [
        Category("Brokastis", "https://www.garsigalatvija.lv/receptes/brokastis/"),
        Category("Zupas", "https://www.garsigalatvija.lv/receptes/zupas/"),
        Category("Pamatƒìdieni", "https://www.garsigalatvija.lv/receptes/pamatedieni/"),
        Category("Piedevas", "https://www.garsigalatvija.lv/receptes/piedevas/"),
        Category("SalƒÅti", "https://www.garsigalatvija.lv/receptes/salati/"),
        Category("Uzkodas", "https://www.garsigalatvija.lv/receptes/uzkodas/"),
        Category("Saldƒìdieni", "https://www.garsigalatvija.lv/receptes/saldedieni/"),
        Category("K≈´kas-maizƒ´tes", "https://www.garsigalatvija.lv/receptes/kukas-maizites/"),
        Category("Maize", "https://www.garsigalatvija.lv/receptes/maize/"),
        Category("Cepumi", "https://www.garsigalatvija.lv/receptes/cepumi/"),
        Category("Dzƒìrieni", "https://www.garsigalatvija.lv/receptes/dzerieni/"),
        Category("Ziemai", "https://www.garsigalatvija.lv/receptes/ziemai/"),
    ]

    print("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–∑ —Å–ø–∏—Å–∫–∞:")
    for i, category in enumerate(categories, 1):
        print(f"{i}. {category.name}")

    choice = int(input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –æ—Ç 1 –¥–æ 12: "))
    if choice < 1 or choice > len(categories):
        print("‚ö†Ô∏è –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä!")
        return

    selected_category = categories[choice - 1]
    print(f"\nüå¶ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–µ—Ü–µ–ø—Ç—ã –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: {selected_category.name}...\n")

    recipes = selected_category.get_recipes()

    if recipes:
        print(f"\n–ù–∞–π–¥–µ–Ω–æ —Ä–µ—Ü–µ–ø—Ç–æ–≤ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '{selected_category.name}': {len(recipes)}\n")
        for i, recipe in enumerate(recipes, 1):
            print(f"{i}. {recipe}")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ä–µ—Ü–µ–ø—Ç—ã.")

if name == "main":
    main()